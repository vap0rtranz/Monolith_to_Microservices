kind: Template
apiVersion: template.openshift.io/v1
metadata:
  annotations:
    description: ticketmonster-backend-v2 template
  labels:
    app: ticketmonster-backend-v2
  name: ticketmonster-backend-v2
  template: ticketmonster-backend-v2
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    annotations:
    labels:
      app: ticketmonster-backend-v2
    name: ticketmonster-backend-v2
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ticketmonster-backend-v2
      deploymentconfig: ticketmonster-backend-v2
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: ticketmonster-backend-v2
          deploymentconfig: ticketmonster-backend-v2
      spec:
        containers:
          - env:
              - name: MYSQL_SERVICE_HOST
                value: ticketmonster-db
              - name: MYSQL_SERVICE_PORT
                value: '3306'
            image: >-
              dynatraceacm/ticketmonster-backend-v2
            imagePullPolicy: Always
            name: ticketmonster-backend-v2
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
  status:
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
    labels:
      app: ticketmonster-backend-v2
    name: ticketmonster-backend-v2
  spec:
    clusterIP: 
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: ticketmonster-backend-v2
      deploymentconfig: ticketmonster-backend-v2
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}


